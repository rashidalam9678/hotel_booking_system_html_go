{{define "base"}}

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Home Page</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-gH2yIJqKdNHPEq0n4Mqa/HGKIhSkIHeL5AyhkYV8i59U5AR6csBvApHHNl/vI1Bx"
      crossorigin="anonymous"
    />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.2.0/dist/css/datepicker-bs5.min.css"
    />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.2.0/dist/css/datepicker.min.css"
    />

    <link
      rel="stylesheet"
      type="text/css"
      href="https://unpkg.com/notie/dist/notie.min.css"
    />
    <link rel="stylesheet" type="text/css" href="/static/css/style.css">

  </head>
  <body>
    <div>
        <nav
      class="navbar navbar-expand-lg navbar-dark bg-dark sticky-top carousel-fade myNavbar  "
    >
      <div class="container-fluid">
        <a class="navbar-brand" href="#">Navbar</a>
        <button
          class="navbar-toggler"
          type="button"
          data-bs-toggle="collapse"
          data-bs-target="#navbarSupportedContent"
          aria-controls="navbarSupportedContent"
          aria-expanded="false"
          aria-label="Toggle navigation"
        >
          <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarSupportedContent">
          <ul class="navbar-nav me-auto mb-2 mb-lg-0">
            <li class="nav-item">
              <a class="nav-link active" aria-current="page" href="/">Home</a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/about">About</a>
            </li>
            <li class="nav-item dropdown">
              <a
                class="nav-link dropdown-toggle"
                href="#"
                role="button"
                data-bs-toggle="dropdown"
                aria-expanded="false"
              >
                Rooms
              </a>
              <ul class="dropdown-menu">
                <li>
                  <a class="dropdown-item" href="/generals-quarters">General Quarters</a>
                </li>
                <li>
                  <a class="dropdown-item" href="/majors-suite">Major's Suite</a>
                </li>
              </ul>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/search-availability">Book Now</a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/contact">Contact</a>
            </li>
          </ul>
        </div>
      </div>
    </nav>
    </div>
    
    {{block "content" .}}
    {{end}}

    <div class="row mt-5 myfooter">
      <div class="col">left</div>
      <div class="col">middle</div>
      <div class="col">right</div>
    </div>

    


    <script
      src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.5/dist/umd/popper.min.js"
      integrity="sha384-Xe+8cL9oJa6tN/veChSP7q+mnSPaj5Bcu9mPX5F5xIGE0DVittaqT5lorf0EI7Vk"
      crossorigin="anonymous"
    ></script>

    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/js/bootstrap.min.js"
      integrity="sha384-ODmDIVzN+pFdexxHEHFBQH3/9/vQ9uori45z4JjnFsRydbmQbmL5t1tQ0culUzyK"
      crossorigin="anonymous"
    ></script>
    <script src="https://unpkg.com/notie"></script>

    <script src="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.2.0/dist/js/datepicker-full.min.js"></script>

    <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
       let attention = Prompt();

        // function to validate the forms
        function formValidation() {
          "use strict";

          // Fetch all the forms we want to apply custom Bootstrap validation styles to
          const forms = document.querySelectorAll(".needs-validation");

          // Loop over them and prevent submission
          Array.from(forms).forEach((form) => {
            form.addEventListener(
              "submit",
              (event) => {
                if (!form.checkValidity()) {
                  event.preventDefault();
                  event.stopPropagation();
                }

                form.classList.add("was-validated");
              },
              false
            );
          });
        }
        formValidation();
      

      

      // Custom Alert
      function Notify(msg, msgType) {
        notie.alert({
          type: msgType,
          text: msg,
        });
      }

      //this is for when we are redirecting to navbar

          attention.toast({msg:"can't get reservation from session"})
          Notify("Hello Brother","error")


      // Modal
      function notifyModal(tlt, txt, icn, cbt) {
        Swal.fire({
          title: tlt,
          text: txt,
          icon: icn,
          confirmButtonText: cbt,
        });
      }

      
      // Prompt
      function Prompt() {
        let toast = function (c) {
          const { msg = "", icon = "success", position = "top-end" } = c;
          const Toast = Swal.mixin({
            toast: true,
            position: position,
            showConfirmButton: false,
            timer: 3000,
            timerProgressBar: true,
            didOpen: (toast) => {
              toast.addEventListener("mouseenter", Swal.stopTimer);
              toast.addEventListener("mouseleave", Swal.resumeTimer);
            },
          });

          Toast.fire({
            icon: icon,
            title: msg,
          });
        };
        let success = function (c) {
          const { msg = "", icon = "success", title = "", footer = "" } = c;
          Swal.fire({
            icon: icon,
            title: title,
            text: msg,
            footer: footer,
          });
        };

        let error = function (c) {
          const { msg = "", icon = "error", title = "", footer = "" } = c;
          Swal.fire({
            icon: icon,
            title: title,
            text: msg,
            footer: footer,
          });
        };

        async function custom(c) {
          const { msg = "", title = "" } = c;

          const { value: result } = await Swal.fire({
            title: title,
            html: msg,
            backdrop: false,
            focusConfirm: false,
            showCancelButton: true,
            willOpen: () => {
                if (c.willOpen !== undefined) {
                                c.willOpen();
                            }
            },
            didOpen: () => {
              if (c.didOpen !== undefined) {
                                c.didOpen();
                            }
            },
            preConfirm: () => {
              if (c.preConfirm !== undefined) {
                                c.preConfirm();
                            }
            },
          });

          if (result) {
                    if (result.dismiss !== Swal.DismissReason.cancel) {
                        if (result.value !== "") {
                            if (c.callback !== undefined) {
                                c.callback(result);
                            }
                        } else {
                            c.callback(false);
                        }
                    } else {
                        c.callback(false);
                    }
                }
        }

        return {
          toast: toast,
          success: success,
          error: error,
          custom: custom,
        };
      }
    </script>
    {{block "js" .}}
    {{end}}
  </body>
</html>
{{end}}


